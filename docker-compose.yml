version: '3.8'

services:

  # _____   NestJS API   _____ #

  api:
    build:
      dockerfile: Dockerfile
      context: ./app
      # Only build development stage from Dockerfile
      target: ${NODE_ENV}
    # Mount our host dir to the docker container
    # Mount api directory (./app) to (:) docker container (/usr/src/app)
    # Reflect File changes from host to container

    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules/
    # Run in debug mode: npm run start:debug --> Also start your vscode debugger
    # Run in dev mode: npm run start:dev

    command: npm run start:debug

    depends_on: 
      - postgres

    environment:
      DATABASE_URL: "postgresql://user:secret@postgres:5432/db_nestjs?schema=public"
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: hard_to_guess_secret_123
      PORT: ${BACKEND_PORT}

    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
      - ${BACKEND_DEBUG_PORT}:${BACKEND_DEBUG_PORT}



# _____   Angular Frontend  _____ #

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./app-frontend
      target: ${NODE_ENV}

    command: npm run start

    volumes:
      - ./app-frontend:/usr/frontend/src/app
      - /usr/frontend/src/app/node_modules

    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}

    links:
      - api



  # _____   DB Postgres  _____ #

  postgres:
    container_name: postgres
    image: postgres:15-bullseye

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: /var/lib/postgresql/data

    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}

    volumes:
     - ./pgdata/data:/var/lib/postgresql/data

    networks:
      - nesjs-network

    restart: on-failure



  # _____   PG Admin   _____ #
  
  pgadmin:
    links:
      - postgres:postgres

    container_name: pgadmin
    image: dpage/pgadmin4

    env_file:
      - .env

    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin

    networks:
      - nesjs-network




  # _____   Nginx   _____ #

  #nginx:
  #  image: nginx:stable-alpine
  #  container_name: nginx

  #  depends_on:
  #    - api
  #    - postgres
  #    - pgadmin

  #  environment:
  #    - NGINX_PORT=${NGINX_PORT}
  #    - BACKEND_PORT=${BACKEND_PORT}

  #  ports:
  #    - 80:${NGINX_PORT}

  #  volumes:
  #    - ./nginx/templates:/etc/nginx/templates
  #    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  #  networks:
  #    - nesjs-network




networks:
  nesjs-network: