version: '3.8'

services:

  # _____   API   _____ #

  api:
    container_name: "hrm_api_${NODE_ENV}"
    image: "hrm_api_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: ./app
      target: "${NODE_ENV}"
      dockerfile: Dockerfile

    entrypoint: ["npm", "run", "start:${NODE_ENV}"]
    env_file:
      - .env

    depends_on:
      - pgadmin
      - postgres

    ports:
      - 5555:5555
    
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - nesjs-network
    restart: unless-stopped





  # _____   DB Postgres  _____ #

  postgres:
    container_name: postgres
    image: postgres:15-bullseye

    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: /var/lib/postgresql/data

    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}

    networks:
      - nesjs-network

    # volumes:
    #  - ./pgdata/data:/var/lib/postgresql/data





  # _____   PG Admin   _____ #
  
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - nesjs-network




  # _____   Nginx   _____ #

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - 80:${NGINX_PORT}
    depends_on:
      - api
      - postgres
      - pgadmin
    networks:
      - nesjs-network




networks:
  nesjs-network: